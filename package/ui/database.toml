# Application Name and Application specific configuration
[app."dnscrypt-proxy"]

# The path where the configuration files live.
# The purpose of this setting is to hide the path in the GUI
# The root directory is '/var/packages/'
directory = 'dnscrypt-proxy/target/var/'

# List of configuration files
# The final file path is '/var/packages/' + directory + files[i]
files = [
    'dnscrypt-proxy.toml',
    'blacklist.txt',
    'ip-blacklist.txt',
    'cloaking-rules.txt',
    'forwarding-rules.txt',
    'whitelist.txt',
    'domains-blacklist.conf',
    'domains-whitelist.txt',
    'domains-time-restricted.txt',
    'domains-blacklist-local-additions.txt'
]

# Applications can have one executable action
# Optionally the output of the command can be saved to a file
[app."dnscrypt-proxy".action]
    # Name of the button. I Recommend naming it with an action
    button_label = "Generate Blacklist"
    # Executable path
    exec = "python"
    # Arguments
    args = ["/var/packages/dnscrypt-proxy/target/var/generate-domains-blacklist.py"]
    # Directory to change to before running the command
    dir = "/var/packages/dnscrypt-proxy/target/var"
    # A file where the output is saved to. Must be a file from the previously set "files" option
    out-file = "blacklist.txt"
# [app."dnscrypt-proxy".action]
#     button_label = "Check config file"
#     exec = "/var/packages/dnscrypt-proxy/target/bin/dnscrypt-proxy"
#     args = ["-check", "-config", "/var/packages/dnscrypt-proxy/target/var/dnscrypt-proxy.toml"]

###############################
#        SynoCommunity        #
###############################

[app."git"]
directory = "git/target/var/"
files = [
    "gitconfig"
]

[app."monit"]
directory = 'monit/target/var/'
files = [
    'monitrc',
    'monit.d/monit'
]

[app."sslh"]
directory = "sslh/target/var/"
files = [
    "sslh.cfg"
]

[app."syncthing"]
directory = "syncthing/target/var/"
files = [
    "options.conf",
    "config.xml"
]

##########################
#        Examples        #
##########################

# [app."example"]
# directory = 'example/target/'
# files = [
#     'example.conf'
# ]

# [app."exampleAction".action]
#     button_label = "Get kernel name"
#     exec = "uname"

# [app."exampleAction2".action]
#     button_label = "List files"
#     dir = "/"
#     exec = "ls"
#     args = ["-l", "-a"]

#################################################################################
#       NOT TESTED! - Config files that I got from grepping synocommunity       #
#################################################################################

# [app."haproxy"]
# directory = "haproxy/target/var/"
# files = [
#     "haproxy.cfg"
# ]

# [app."bitlbee"]
# directory = "bitlbee/target/var/"
# files = [
#     "bitlbee.conf"
# ]

# [app."couchpotatoserver"]
# directory = "couchpotatoserver/target/var/"
# files = [
#     "settings.conf"
# ]

# [app."deluge"]
# directory = "deluge/target/var/"
# files = [
#     "core.conf"
# ]

# [app."gateone"]
# directory = "gateone/target/var/"
# files = [
#     "90custom.conf",
#     "95users.conf"
# ]

# [app."lirc"]
# directory = "lirc/target/var/"
# files = [
#     "lircd.conf"
# ]

# [app."mosquitto"]
# directory = "mosquitto/target/var/"
# files = [
#     "mosquitto.conf"
# ]

# [app."oscam"]
# directory = "oscam/target/var/"
# files = [
#     "oscam.conf"
# ]

# [app."redis"]
# directory = "redis/target/var/"
# files = [
#     "redis.conf"
# ]

# [app."shairport-sync"]
# directory = "shairport-sync/target/var/"
# files = [
#     "alsa.conf"
# ]

# [app."squidguard"]
# directory = "squidguard/target/var/"
# files = [
#     "c-icap.conf",
#     "mime.conf",
#     "squid.conf",
#     "squidclamav.conf",
#     "squidguardmgr.conf",
# ]

# [app."umurmur"]
# directory = "umurmur/target/var/"
# files = [
#     "umurmur.conf"
# ]

# [app."znc"]
# directory = "znc/target/var/"
# files = [
#     "znc.conf"
# ]

# [app."flexget"]
# directory = "flexget/target/var/"
# files = [
#     "config.yml"
# ]

# [app."wallabag"]
# directory = "wallabag/target/var/"
# files = [
#     "parameters.yml"
# ]

# [app."icecast"]
# directory = "icecast/target/var/"
# files = [
#     "icecast.xml"
# ]

# [app."museek-plus"]
# directory = "museek-plus/target/var/"
# files = [
#     "config.xml"
# ]

# [app."radarr"]
# directory = "radarr/target/var/"
# files = [
#     "config.xml"
# ]

# [app."sonarr"]
# directory = "sonarr/target/var/"
# files = [
#     "config.xml"
# ]

# [app."plexpy"]
# directory = "plexpy/target/var/"
# files = [
#     "config.ini"
# ]

# [app."headphones"]
# directory = "headphones/target/var/"
# files = [
#     "config.ini"
# ]

# [app."sickrage"]
# directory = "sickrage/target/var/"
# files = [
#     "config.ini"
# ]

# [app."lazylibrarian"]
# directory = "lazylibrarian/target/var/"
# files = [
#     "config.ini"
# ]

# [app."sabnzbd"]
# directory = "sabnzbd/target/var/"
# files = [
#     "config.ini"
# ]

# [app."comskip"]
# directory = "comskip/target/var/"
# files = [
#     "config.ini"
# ]

# [app."mylar"]
# directory = "mylar/target/var/"
# files = [
#     "config.ini"
# ]

# [app."plexivity"]
# directory = "plexivity/target/var/"
# files = [
#     "config.ini"
# ]

# [app."ffsync"]
# directory = "ffsync/target/var/"
# files = [
#     "ffsync.ini"
# ]
